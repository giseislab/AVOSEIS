: # use perl
eval 'exec $ANTELOPE/bin/perl -S $0 "$@"'
if 0;

use lib "$ENV{ANTELOPE}/data/perl" ;

##############################################################################
# Author: Glenn Thompson (GT) 2007
#         ALASKA EARTHQUAKE INFORMATION CENTER
#
# Modifications:
#       2007-??-??: Written
#
# Purpose:
#
#       This program is 
##############################################################################

use Datascope;
use orb;

use strict;
use warnings;
our $PROG_NAME;
($PROG_NAME = $0) =~ s(.*/)();  # PROG_NAME becomes $0 minus any path


# Usage - command line options and arguments
if ($#ARGV < 1 ) {
    print STDERR <<"EOU" ;

    Usage: $PROG_NAME days path match

	$PROG_NAME deletes files that match path/match that are older than days days

EOU
    exit 1 ;
}




sub run {               # run system cmds safely
     	my ( $cmd, $ok ) = @_ ;

     	print "$cmd\n";
     	my $value = "";


        $value = `$cmd` if $ok;
        chomp($value);
        $value =~ s/\s*//g;

        if ($?) {
            print STDERR "$cmd error $? \n" ;
            exit(1);
        }

      	return $value;

}
# End of header
##############################################################################


my $days = $ARGV[0];
my $path = $ARGV[1];

my @matchfiles;
if ($#ARGV > 1) {
	my $match = $ARGV[2];
	@matchfiles = glob("$path/$match*");
	
}
else
{
	@matchfiles = glob("$path/*");
}

my $file;
foreach $file (@matchfiles) {
	if ((-M $file > $days) && (-f $file)) {
		&run("rm $file", 1);
	}
	else
	{
		#print "do not remove $file ***\n";
	}
}

